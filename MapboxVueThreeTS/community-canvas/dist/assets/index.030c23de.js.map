{"version":3,"file":"index.030c23de.js","sources":["../../vite/modulepreload-polyfill","../../src/init.ts","../../src/global.ts","../../src/stores/location.ts","../../src/stores/s3urls.ts","../../src/components/Map.vue","../../src/components/Map.vue","../../src/assets/icons/LOGO.png","../../src/components/SideMenu.vue","../../src/App.vue","../../src/main.ts"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","window.global ||= window;\r\n\r\nexport {}","export const mapboxAccessToken: string = \"pk.eyJ1IjoibWFzaGl5YXQiLCJhIjoiY2x1MzdxZzV4MHQ4bDJqbzN2aDNuazB2MiJ9.9hN3i429a3wstWUHA45bfg\";","import { defineStore } from 'pinia';\r\n\r\ninterface State {\r\n    lng: number,\r\n    lat: number,\r\n    bearing: number,\r\n    pitch: number,\r\n    zoom: number,\r\n}\r\n\r\nexport const locationStore = defineStore('location', {    \r\n    state: (): State => { \r\n        return {\r\n            lng: -73.8892669226548, \r\n            lat: 40.753826358076516,\r\n            bearing: 0,\r\n            pitch: 60,\r\n            zoom: 20,\r\n        }  \r\n    }\r\n  })","import { defineStore } from 'pinia';\r\nimport { storeToRefs } from 'pinia';\r\nimport { S3Client, ListObjectsV2Command } from \"@aws-sdk/client-s3\";\r\nimport AWS from \"aws-sdk\";\r\n\r\ninterface S3List {\r\n    urls: Array<string>;\r\n    modelURL: string;\r\n}\r\n\r\nexport const urlStore = defineStore('urlList', {\r\n    state: (): S3List => {\r\n        return {\r\n            urls: new Array<string>(),\r\n            modelURL: null\r\n        }\r\n    },\r\n    actions: {\r\n        RetrieveModelURL(index: number) {\r\n            let imgURL: string = this.urls[index];\r\n            if (imgURL.split(\"Thumbnails/\")[1].split(\"/\")[0] === \"Trees\") {\r\n                this.modelURL = imgURL.split(\"Thumbnails/\").join(\"\").split(\".png\").join(\"\").concat(\".glb\");\r\n            } else {\r\n                this.modelURL = imgURL.split(\"Thumbnails/\").join(\"\").split(\".png\").join(\"\").concat(\".gltf\");\r\n            }            \r\n        }\r\n    }\r\n})\r\n\r\nexport const searchBuckets = async () => {\r\n    const command = new ListObjectsV2Command({\r\n        Bucket: \"community-canvas-bucket\",\r\n        Prefix: \"CCModels/Thumbnails/\",\r\n        MaxKeys: 100,\r\n    });\r\n\r\n    try {\r\n        let isTruncated = true;\r\n\r\n        console.log(\"Your bucket contains the following objects:\\n\");\r\n        let contents = \"\";\r\n        const prefix = \"https://community-canvas-bucket.s3.amazonaws.com/\";\r\n        const store = urlStore();\r\n        const { urls } = storeToRefs(store);\r\n\r\n        while (isTruncated) {\r\n            const { Contents, IsTruncated, NextContinuationToken } = await client.send(command);\r\n            Contents.map((c) => {\r\n                store.$patch({ urls: urls.value.concat(prefix + c.Key) });\r\n                contents += `${prefix + c.Key}\\n`;\r\n            }\r\n        );\r\n            isTruncated = IsTruncated;\r\n            command.input.ContinuationToken = NextContinuationToken;\r\n        }\r\n        // console.log(contents);\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\nconst cognitoCredentials = new AWS.CognitoIdentityCredentials(\r\n    {\r\n        IdentityPoolId: 'us-east-1:5d854e3e-4399-4452-91b0-178ee7f8c110',\r\n    },\r\n    {\r\n        region: 'us-east-1',\r\n        httpOptions: { timeout: 1000 }\r\n    }\r\n);\r\n\r\nconst client = new S3Client({\r\n    region: \"us-east-1\",\r\n    credentials: cognitoCredentials,\r\n});\r\n\r\ncognitoCredentials.get((err) => {\r\n    if (err) {\r\n        console.error('Error getting credentials:', err);\r\n    } else {\r\n        console.log(\"Success!\");\r\n        AWS.config.credentials = cognitoCredentials;\r\n        console.log(AWS.config.credentials);\r\n        searchBuckets();\r\n    }\r\n});\r\n","<template>\r\n  <div id=\"mapContainer\" ref=\"mapContainer\" class=\"map-container\"></div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport * as mapboxgl from \"mapbox-gl\";\r\nimport {Map as mbMap, type AnyLayer} from \"mapbox-gl\";\r\nimport { mapboxAccessToken } from '../global';\r\nimport { Threebox } from 'threebox-plugin';\r\nimport { locationStore } from \"@/stores/location\";\r\nimport { urlStore } from \"@/stores/s3urls\";\r\nimport { storeToRefs } from 'pinia';\r\n\r\n// mapboxgl.accessToken = mapboxAccessToken;\r\nObject.getOwnPropertyDescriptor(mapboxgl, \"accessToken\").set(mapboxAccessToken);\r\n\r\ndeclare global {\r\n  interface Window {\r\n    tb: any;\r\n  }\r\n}\r\n\r\ninterface mapBoxMap {\r\n    map: mbMap | null;\r\n}\r\n\r\nclass MapboxModelLayerCreator {\r\n\r\n  // private renderer: THREE.WebGLRenderer = new THREE.WebGLRenderer;\r\n  private createCustomLayer(layerName: string, origin: [number, number]) {\r\n\r\n    // let model;\r\n    //create the layer\r\n    let customLayer3D: AnyLayer = {\r\n      id: layerName,\r\n      type: 'custom',\r\n      renderingMode: '3d',\r\n      onAdd: function (map: mbMap, gl: WebGLRenderingContext) {\r\n        window.tb = new Threebox(\r\n          map,\r\n          map.getCanvas().getContext('webgl'),\r\n          {\r\n            // realSunlight: true,\r\n            enableSelectingObjects: true,\r\n            enableDraggingObjects: true,\r\n            enableRotatingObjects: true,\r\n            enableTooltips: false,\r\n          }\r\n        )\r\n      },\r\n      render: function (gl: WebGLRenderingContext, matrix: number[]) {\r\n        window.tb.update();\r\n      }\r\n    };\r\n    return customLayer3D;\r\n  };\r\n\r\n  constructor(map: mbMap) {\r\n\r\n    let modelOrigin: [number, number] = [-73.8892669226548, 40.753826358076516];\r\n    let modelLayer: AnyLayer;\r\n\r\n    map.on('style.load', () => {\r\n      map.setConfigProperty('basemap', 'lightPreset', 'dusk');\r\n      modelLayer = this.createCustomLayer('3d-model', modelOrigin);\r\n      map.addLayer(modelLayer);\r\n      window.tb.defaultLights();\r\n\r\n      const storeURLs = urlStore();\r\n      const { modelURL } = storeToRefs(storeURLs);\r\n\r\n      map.on('click', (e) => {\r\n        if (modelURL.value === null) return;\r\n        let options = {\r\n          type: 'gltf', //'gltf'/'mtl'\r\n          obj: modelURL.value,\r\n          units: 'meters', //units in the default values are always in meters\r\n          scale: 0.3,\r\n          rotation: { x: 90, y: 0, z: 0 }, //default rotation\r\n          anchor: 'center'\r\n        }\r\n        window.tb.loadObj(options, (model: any) => {\r\n          model.setCoords([e.lngLat.lng, e.lngLat.lat]);\r\n          // model.addTooltip(\"A tree in a park\", false);\r\n          window.tb.add(model, modelLayer.id);\r\n          // model.castShadow = true;\r\n          window.tb.lights.dirLight.target = model;\r\n          window.tb.update();\r\n        });\r\n        storeURLs.$patch({modelURL: null});\r\n      });\r\n\r\n    });\r\n  }\r\n}\r\n\r\nexport default {\r\n\r\n  data: () => ({ map: null } as mapBoxMap),\r\n\r\n  mounted() {\r\n    const store = locationStore();\r\n    const map = new mbMap({\r\n      container: \"mapContainer\",\r\n      style: 'mapbox://styles/mapbox/standard',\r\n      zoom: 20,\r\n      center: [-73.8892669226548, 40.753826358076516],\r\n      pitch: 60,\r\n      antialias: true // create the gl context with MSAA antialiasing, so custom layers are antialiased\r\n    });\r\n\r\n    const updateLocation = () => {\r\n      store.$patch(this[\"getLocation\"]());\r\n    }\r\n\r\n    map.on(\"move\", updateLocation);\r\n    map.on(\"zoom\", updateLocation);\r\n    map.on(\"rotate\", updateLocation);\r\n    map.on(\"pitch\", updateLocation);\r\n\r\n    store.$subscribe((mutation, state) => {\r\n      const curr = this[\"getLocation\"]();\r\n      const map = this[\"map\"];\r\n\r\n      if (curr[\"lng\"] != state.lng || curr[\"lat\"] != state.lat) {\r\n        map.setCenter({ lng: state.lng, lat: state.lat });\r\n      }\r\n      if (curr[\"pitch\"] != state.pitch) { \r\n        map.setPitch(state.pitch);\r\n      }\r\n      if (curr[\"bearing\"] != state.bearing) { \r\n        map.setBearing(state.bearing);\r\n      }\r\n      if (curr[\"zoom\"] != state.zoom) { \r\n        map.setZoom(state.zoom);\r\n      }\r\n    })\r\n\r\n    this[\"map\"] = map;\r\n    const modelLayer = new MapboxModelLayerCreator(this[\"map\"]);\r\n\r\n  },\r\n\r\n  unmounted() {\r\n    if (this[\"map\"] != null) { \r\n      this[\"map\"].remove();\r\n      this[\"map\"] = null;\r\n    }\r\n  },\r\n  methods: {\r\n    getLocation() {\r\n      return {\r\n        ...this[\"map\"].getCenter(),\r\n        bearing: this[\"map\"].getBearing(),\r\n        pitch: this[\"map\"].getPitch(),\r\n        zoom: this[\"map\"].getZoom(),\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.map-container {\r\n  flex: 1;\r\n}\r\n</style>","<template>\r\n  <div id=\"mapContainer\" ref=\"mapContainer\" class=\"map-container\"></div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport * as mapboxgl from \"mapbox-gl\";\r\nimport {Map as mbMap, type AnyLayer} from \"mapbox-gl\";\r\nimport { mapboxAccessToken } from '../global';\r\nimport { Threebox } from 'threebox-plugin';\r\nimport { locationStore } from \"@/stores/location\";\r\nimport { urlStore } from \"@/stores/s3urls\";\r\nimport { storeToRefs } from 'pinia';\r\n\r\n// mapboxgl.accessToken = mapboxAccessToken;\r\nObject.getOwnPropertyDescriptor(mapboxgl, \"accessToken\").set(mapboxAccessToken);\r\n\r\ndeclare global {\r\n  interface Window {\r\n    tb: any;\r\n  }\r\n}\r\n\r\ninterface mapBoxMap {\r\n    map: mbMap | null;\r\n}\r\n\r\nclass MapboxModelLayerCreator {\r\n\r\n  // private renderer: THREE.WebGLRenderer = new THREE.WebGLRenderer;\r\n  private createCustomLayer(layerName: string, origin: [number, number]) {\r\n\r\n    // let model;\r\n    //create the layer\r\n    let customLayer3D: AnyLayer = {\r\n      id: layerName,\r\n      type: 'custom',\r\n      renderingMode: '3d',\r\n      onAdd: function (map: mbMap, gl: WebGLRenderingContext) {\r\n        window.tb = new Threebox(\r\n          map,\r\n          map.getCanvas().getContext('webgl'),\r\n          {\r\n            // realSunlight: true,\r\n            enableSelectingObjects: true,\r\n            enableDraggingObjects: true,\r\n            enableRotatingObjects: true,\r\n            enableTooltips: false,\r\n          }\r\n        )\r\n      },\r\n      render: function (gl: WebGLRenderingContext, matrix: number[]) {\r\n        window.tb.update();\r\n      }\r\n    };\r\n    return customLayer3D;\r\n  };\r\n\r\n  constructor(map: mbMap) {\r\n\r\n    let modelOrigin: [number, number] = [-73.8892669226548, 40.753826358076516];\r\n    let modelLayer: AnyLayer;\r\n\r\n    map.on('style.load', () => {\r\n      map.setConfigProperty('basemap', 'lightPreset', 'dusk');\r\n      modelLayer = this.createCustomLayer('3d-model', modelOrigin);\r\n      map.addLayer(modelLayer);\r\n      window.tb.defaultLights();\r\n\r\n      const storeURLs = urlStore();\r\n      const { modelURL } = storeToRefs(storeURLs);\r\n\r\n      map.on('click', (e) => {\r\n        if (modelURL.value === null) return;\r\n        let options = {\r\n          type: 'gltf', //'gltf'/'mtl'\r\n          obj: modelURL.value,\r\n          units: 'meters', //units in the default values are always in meters\r\n          scale: 0.3,\r\n          rotation: { x: 90, y: 0, z: 0 }, //default rotation\r\n          anchor: 'center'\r\n        }\r\n        window.tb.loadObj(options, (model: any) => {\r\n          model.setCoords([e.lngLat.lng, e.lngLat.lat]);\r\n          // model.addTooltip(\"A tree in a park\", false);\r\n          window.tb.add(model, modelLayer.id);\r\n          // model.castShadow = true;\r\n          window.tb.lights.dirLight.target = model;\r\n          window.tb.update();\r\n        });\r\n        storeURLs.$patch({modelURL: null});\r\n      });\r\n\r\n    });\r\n  }\r\n}\r\n\r\nexport default {\r\n\r\n  data: () => ({ map: null } as mapBoxMap),\r\n\r\n  mounted() {\r\n    const store = locationStore();\r\n    const map = new mbMap({\r\n      container: \"mapContainer\",\r\n      style: 'mapbox://styles/mapbox/standard',\r\n      zoom: 20,\r\n      center: [-73.8892669226548, 40.753826358076516],\r\n      pitch: 60,\r\n      antialias: true // create the gl context with MSAA antialiasing, so custom layers are antialiased\r\n    });\r\n\r\n    const updateLocation = () => {\r\n      store.$patch(this[\"getLocation\"]());\r\n    }\r\n\r\n    map.on(\"move\", updateLocation);\r\n    map.on(\"zoom\", updateLocation);\r\n    map.on(\"rotate\", updateLocation);\r\n    map.on(\"pitch\", updateLocation);\r\n\r\n    store.$subscribe((mutation, state) => {\r\n      const curr = this[\"getLocation\"]();\r\n      const map = this[\"map\"];\r\n\r\n      if (curr[\"lng\"] != state.lng || curr[\"lat\"] != state.lat) {\r\n        map.setCenter({ lng: state.lng, lat: state.lat });\r\n      }\r\n      if (curr[\"pitch\"] != state.pitch) { \r\n        map.setPitch(state.pitch);\r\n      }\r\n      if (curr[\"bearing\"] != state.bearing) { \r\n        map.setBearing(state.bearing);\r\n      }\r\n      if (curr[\"zoom\"] != state.zoom) { \r\n        map.setZoom(state.zoom);\r\n      }\r\n    })\r\n\r\n    this[\"map\"] = map;\r\n    const modelLayer = new MapboxModelLayerCreator(this[\"map\"]);\r\n\r\n  },\r\n\r\n  unmounted() {\r\n    if (this[\"map\"] != null) { \r\n      this[\"map\"].remove();\r\n      this[\"map\"] = null;\r\n    }\r\n  },\r\n  methods: {\r\n    getLocation() {\r\n      return {\r\n        ...this[\"map\"].getCenter(),\r\n        bearing: this[\"map\"].getBearing(),\r\n        pitch: this[\"map\"].getPitch(),\r\n        zoom: this[\"map\"].getZoom(),\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.map-container {\r\n  flex: 1;\r\n}\r\n</style>","export default \"__VITE_ASSET__c2c9fe9a__\"","<style lang=\"scss\" scoped>\r\naside {\r\n    display: flex;\r\n    position: absolute;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    max-height: 100vh;\r\n    padding: 1rem;\r\n    background-color: var(--default-color);\r\n    color: var(--white-color);\r\n    width: calc(2rem + 32px);\r\n    transition: 0.2s ease-out;\r\n    z-index: 99;\r\n\r\n    .logo {\r\n        margin-bottom: 1rem;\r\n\r\n        img {\r\n            width: 2rem;\r\n        }\r\n    }\r\n\r\n    .menu-toggle-wrap {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        margin-bottom: 1rem;\r\n        position: relative;\r\n        top: 0;\r\n        transition: 0.2s ease-out;\r\n\r\n        .menu-toggle {\r\n            transition: 0.2s ease-out;\r\n            border: none;\r\n            background: none;\r\n\r\n            .material-symbols-outlined {\r\n                transition: 0.2s ease-out;\r\n                font-size: 2rem;\r\n                color: var(--white-color);\r\n            }\r\n\r\n            &:hover {\r\n                .material-symbols-outlined {\r\n                    color: var(--default-color);\r\n                    transform: translateX(0.5rem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    #sidebar {\r\n        color: var(--white-color);\r\n        font-family: monospace;\r\n        z-index: 1;\r\n        position: relative;\r\n        top: -3rem;\r\n        left: 0;\r\n        display: none;\r\n    }\r\n\r\n    .menu-title {\r\n        display: none;\r\n    }\r\n\r\n    .menu-content {\r\n        display: none;\r\n    }\r\n\r\n    &.isExpanded {\r\n        width: var(--sidebar-width);\r\n\r\n        .menu-toggle-wrap {\r\n            top: -4rem;\r\n\r\n            .menu-toggle {\r\n                transform: rotate(-180deg);\r\n            }\r\n        }\r\n\r\n        #sidebar {\r\n            display: block;\r\n        }\r\n\r\n        .menu-title {\r\n            display: block;\r\n            text-align: left;\r\n            padding-bottom: 1rem;\r\n            font-size: 32px;\r\n        }\r\n\r\n        .menu-content {\r\n            display: flex;\r\n            flex-direction: column;\r\n            width: 100%;\r\n            overflow: scroll;\r\n            \r\n            .model-menu {\r\n                display: grid;\r\n                grid-template-columns: 1fr 1fr;\r\n                grid-template-rows: auto;\r\n                column-gap: 1rem;\r\n                row-gap: 1rem;\r\n\r\n                .model-image-button {\r\n                outline: none;\r\n                    img {\r\n                        width: 100%;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\nimport { locationStore } from '@/stores/location';\r\nimport { urlStore } from '@/stores/s3urls'; \r\nimport { storeToRefs } from 'pinia';\r\nimport { ref } from 'vue';\r\n\r\n\r\nconst storeLoc = locationStore();\r\nconst storeURLs = urlStore(); \r\nconst { lat, lng, bearing, pitch, zoom } = storeToRefs(storeLoc);\r\nconst { urls } = storeToRefs(storeURLs);\r\nconst isExpanded = ref(false);\r\n\r\nconst ToggleMenu = () => {\r\n    isExpanded.value = !isExpanded.value;\r\n    // urls.value.forEach( (item) => console.log(item));\r\n}\r\n\r\n</script>\r\n\r\n<template v-model=\"store\">\r\n    <aside :class=\"`${isExpanded ? 'isExpanded' : ''}`\">\r\n        <div class=\"logo\">\r\n            <img src=\"../assets/icons/LOGO.png\" alt=\"Community Canvas logo\">\r\n        </div>\r\n        <div class=\"menu-toggle-wrap\">\r\n            <button class=\"menu-toggle\" @click=\"ToggleMenu\">\r\n                <span class=\"material-symbols-outlined\">keyboard_double_arrow_right</span>\r\n            </button>\r\n        </div>\r\n        <div id=\"sidebar\">\r\n            Longitude: {{ lng.toFixed(4) }} <br>\r\n            Latitude: {{ lat.toFixed(4) }} <br>\r\n            Zoom: {{ zoom.toFixed(2) }} <br>\r\n            <template v-if=\"bearing\"> Bearing: {{ bearing.toFixed(2) }} <br> </template>\r\n            <template v-if=\"pitch\"> Pitch: {{ pitch.toFixed(2) }} <br> </template>\r\n            <button\r\n                @click=\"storeLoc.$patch({ lng: -73.8892669226548, lat: 40.753826358076516, bearing: 0, pitch: 60, zoom: 20 })\">Reset\r\n                Camera</button>\r\n        </div>\r\n        <h3 class=\"menu-title\">Models</h3>\r\n        <div class=\"menu-content\">\r\n            <div class=\"model-menu\">\r\n                <button class=\"model-image-button\" v-for=\"(item, index) in urls\" @click=\"storeURLs.RetrieveModelURL(index)\">\r\n                    <img :src=\"item\" alt=\"no image\">\r\n                </button>                \r\n            </div>\r\n        </div>\r\n        \r\n\r\n    </aside>\r\n</template>","<script>\r\nimport Map from \"./components/Map.vue\";\r\nimport SideMenu from \"./components/SideMenu.vue\";\r\nimport \"./assets/mapbox-gl.css\";\r\n\r\nexport default {\r\n  components: {\r\n    Map,\r\n    SideMenu\r\n  }\r\n};\r\n\r\n</script>\r\n<!-- How do you place SideMenu OVER the map? -->\r\n<template>\r\n  <SideMenu /> \r\n  <div id=\"layout\">\r\n    \r\n    <Map/>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n:root {\r\n  --sidebar-width: 300px;\r\n  --default-color: rgb(35 55 75 / 90%);\r\n  --white-color: #fff;\r\n}\r\n\r\n* {\r\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n}\r\n\r\n#layout {\r\n  flex: 1;\r\n  display: flex;\r\n}\r\n</style>","import \"./init\";\r\nimport { createApp } from 'vue';\r\nimport { createPinia } from 'pinia'; \r\nimport App from './App.vue';\r\nimport \"./stores/s3urls\";\r\n\r\nimport './assets/main.css';\r\n\r\nconst pinia = createPinia();\r\nconst app = createApp(App);\r\n\r\napp.use(pinia);\r\napp.mount('#app');"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","mapboxAccessToken","locationStore","defineStore","urlStore","index","imgURL","searchBuckets","command","ListObjectsV2Command","isTruncated","contents","prefix","store","urls","storeToRefs","Contents","IsTruncated","NextContinuationToken","client","c","err","cognitoCredentials","AWS","S3Client","mapboxgl","MapboxModelLayerCreator","layerName","origin","map","gl","Threebox","matrix","modelOrigin","modelLayer","storeURLs","modelURL","e","options","model","_sfc_main$2","mbMap","updateLocation","state","curr","_hoisted_1","_imports_0","storeLoc","lat","lng","bearing","pitch","zoom","isExpanded","ref","ToggleMenu","_sfc_main","Map","SideMenu","_createVNode","_component_SideMenu","_createElementVNode","_component_Map","pinia","createPinia","app","createApp","App"],"mappings":"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"}